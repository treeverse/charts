apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lakefs.fullname" . }}
  labels:
    {{- include "lakefs.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "lakefs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "lakefs.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.lakefsConfig }}
          args: ["run", "--config", "/etc/lakefs/config.yaml"]
          {{- else }}
          args: ["run"]
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.lakefsConfig }}
            - name: config-volume
              mountPath: /etc/lakefs
          {{- else }}
            - name: {{ .Chart.Name }}-local-data
              mountPath: "/lakefs/data"
          {{- end }}
          env:
            {{- if .Values.lakefsConfig }}
            - name: LAKEFS_DATABASE_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ include "lakefs.fullname" . }}
                  key: database_connection_string
            - name: LAKEFS_AUTH_ENCRYPT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "lakefs.fullname" . }}
                  key: auth_encrypt_secret_key
            {{- else }}
            - name: LAKEFS_DATABASE_CONNECTION_STRING
              value: postgres://postgres:password@localhost:5432/postgres?sslmode=disable
            - name: LAKEFS_AUTH_ENCRYPT_SECRET_KEY
              value: asdjfhjaskdhuioaweyuiorasdsjbaskcbkj
            - name: LAKEFS_BLOCKSTORE_LOCAL_PATH
              value: /lakefs/data
            {{- end }}
        {{- if not .Values.lakefsConfig }}
        - name: {{ .Chart.Name }}-postgres
          image: postgres:11
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: {{ .Chart.Name }}-postgredb
        {{- end }}
      volumes:
        {{- if not .Values.lakefsConfig }}
        - name: {{ .Chart.Name }}-postgredb
        - name: {{ .Chart.Name }}-local-data
        {{- else }}
        - name: config-volume
          configMap:
            name: {{ include "lakefs.fullname" . }}
            items:
              - key: config.yaml
                path: config.yaml
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
